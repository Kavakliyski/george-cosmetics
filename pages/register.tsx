// interface
import IPageProps from "../interfaces/page";

// next
import React, { useState, useContext, useEffect } from "react";
import { useRouter } from "next/router";
import Head from 'next/head';
import Link from "next/link";

// stlyes
import styles from '../styles/pages/signin.module.scss';

// auth
import { UserAuth } from '../context/AuthContext';

// errors
import { SigninError } from "../components/errorMsg/SigninError";

const RegisterPage: IPageProps = () => {

    const [email, setEmail] = useState<string>('');
    const [password, setPassword] = useState<string>('');
    const [confirm, setConfirm] = useState<string>('');
    const [error, setError] = useState<string>('');
    const [registering, setRegistering] = useState<boolean>(false);

    const { createUser } = UserAuth();

    const router = useRouter();

    const handleSubmit = async (event: any) => {
        event.preventDefault();
        setError('');

        try {
            await createUser(email, password);
            setError('');
            router.push('/signin');

        } catch (err) {
            console.log(err.message);
            setError(err.message);
            console.log(error);
        }
    };


    return (

        <>
            <Head>
                <title>Register - George cosmetics</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main>
                <div className={styles.container}>
                    <h2>Register</h2>
                    <div className={styles.wrapper}>
                        <form
                            onSubmit={handleSubmit}
                        >
                            <input
                                type='email'
                                name='email'
                                id='email'
                                placeholder='Enter Email'
                                value={email}
                                onChange={(event) => setEmail(event.target.value)}
                            />
                            {
                                error === 'Firebase: Error (auth/missing-email).' ? <p>Missing email</p> : null
                            }
                            {
                                error === 'Firebase: Error (auth/invalid-email).' ? <p>Invalid email</p> : null
                            }
                            {
                                error === 'Firebase: Error (auth/email-already-in-use).' ? <p>Email already in use</p> : null
                            }
                            <input
                                autoComplete="new-password"
                                type='password'
                                name='password'
                                id='password'
                                placeholder='Create Password'
                                value={password}
                                onChange={(event) => setPassword(event.target.value)}
                            />
                            {
                                error === 'Firebase: Error (auth/internal-error).' ? <p>Invalid password</p> : null
                            }
                            {
                                error === 'Firebase: Password should be at least 6 characters (auth/weak-password).' ? <p>Password should be at least 6 characters</p> : null
                            }

                            <button>
                                Sign In
                            </button>
                        </form>
                    </div>
                </div>
            </main>
        </>

    )
}

export default RegisterPage;